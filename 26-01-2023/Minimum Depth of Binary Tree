Question:
  Given a binary tree, find its minimum depth.
The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.

Note: A leaf is a node with no children.

Solution:
class Solution {
    public int height(TreeNode root)
    {
        if(root==null)
        {
            return 0;
        }
        int left=height(root.left);
        int right=height(root.right);
        if(left!=0 && right!=0)
        {
            return(Math.min(left,right)+1);
        }
        else if(left==0 && right==0)
        {
            return 1;
        }
        else if(left == 0)
        {
            return right+1;
        }
        return left+1;
    }
    public int minDepth(TreeNode root) {
        if(root==null)
        {
            return 0;
        }
        int left=height(root.left);
        int right=height(root.right);
        if(left!=0 && right!=0)
        {
            return(Math.min(left,right)+1);
        }
        else if(left==0 && right==0)
        {
            return 1;
        }
        else if(left == 0)
        {
            return right+1;
        }
        return left+1;
    }
}
