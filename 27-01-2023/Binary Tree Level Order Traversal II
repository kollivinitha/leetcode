Question:
Given the root of a binary tree, return the bottom-up level order traversal of its nodes' values. (i.e., from left to right, level by level from leaf to root).

Solution
class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        List<List<Integer>> list = new ArrayList<>();
        Queue<TreeNode> queue = new LinkedList<>();
        if(root == null)
        {
            return list;
        }
        queue.add(root);
        while(!queue.isEmpty())
        {
            List<Integer> l = new LinkedList<>();
            int s= queue.size();
            for(int i=0;i<s;i++)
            {
                TreeNode curr = queue.poll();
                l.add(curr.val);
                if(curr.left != null)
                {
                    queue.add(curr.left);
                }
                if(curr.right != null)
                {
                    queue.add(curr.right);
                }
            }
            list.add(0,l);
        }
        return list;
    }
}
