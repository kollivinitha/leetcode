Question:
Given an integer array nums where the elements are sorted in ascending order, convert it to a 
height-balanced
 binary search tree.

 Solution:
 /**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode construct(int[] nums,int s,int e)
    {
        if(s>e)
        {
            return null;
        }
        int mid=(s+e)/2;
        TreeNode root = new TreeNode(nums[mid]);
        root.left=construct(nums,s,mid-1);
        root.right=construct(nums,mid+1,e);
        return root;
    }
    public TreeNode sortedArrayToBST(int[] nums) {
        int s=0;
        int l=nums.length-1;
        if(l+1 == s)
        {
            return null;
        }
        return construct(nums,s,l);
    }
}
