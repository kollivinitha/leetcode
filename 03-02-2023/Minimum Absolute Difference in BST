Question:
Given the root of a Binary Search Tree (BST), return the minimum absolute difference between the values of any two different nodes in the tree.

Solution:
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    Integer prev=null;
    int min=Integer.MAX_VALUE;
    public int inorder(TreeNode root)
    {
        if(root == null){
            return min;
        }
        inorder(root.left);
        if(prev != null )
        {
            min=Math.min(min,root.val-prev);
        }
        prev=root.val;
        inorder(root.right);
        return min;
    }
    public int getMinimumDifference(TreeNode root) {
        if(root == null){
            return 0;
        }
        return inorder(root);
    }
}
